1.三大性质
    - 原子性
    - 有序性
    - 可见性
2.原子性
    - 定义: 一个操作是不可中断的，要么全部执行成功要么全部执行失败
    - i++ 分三步 读取i , i+1 ,赋值i
    - jmm定义了8中原子操作
        - lock(锁定):作用于主内存,把一个变量标识为线程独占
        - unlock(解锁):作用于主内存,把一个处于锁定状态的变量释放出来
        - read(读取):作用于主内存,它把一个变量的值从主存传输到工作内存中
        - load(载入):作用于工作内存的变量,把read的变量存入工作内存的变量副本中
        - use(使用):作用于工作内存的变量,它把工作内存中一个变量的值传递给执行引擎
        - assign(赋值):作用于工作内存中的变量，它把一个从执行引擎接收到的值赋给工作内存的变量
        - store(存储):作用于工作内存的变量，它把工作内存中一个变量的值传送给主内存中以便随后的write操作使用
        - write(操作):作用于主内存的变量，它把store操作从工作内存中得到的变量的值放入主内存的变量中。
    - 基本数据类型的访问读写具备原子性,float和double不具有
    - synchronized可以保证原子性
    - volatile不能保证原子性
3.有序性: 程序执行的顺序按照代码的先后顺序执行。
    - java程序有序 如果在本线程内观察，所有操作都是有序的；如果在一个线程中观察另一个线程，所有操作都是无序的
    - synchronized有序, 语义要求线程访问共享变量的时候只能串行执行
    - volatile包含禁止指令重排序的语义,拥有有序性
4.可见性:指当一个线程修改了共享变量后，其他线程能够立即得知这个修改
    - synchronized有可见性
    - volatile有lock指令,所以也有可见性